# HTTPS vhost serving api, frontend and registry
<IfModule mod_ssl.c>
<VirtualHost _default_:8443>
    <Directory />
        Options -Indexes +FollowSymLinks
        AllowOverride None
    </Directory>

    ### REGISTRY (proxy) ###
    <Location /v2>
        Header always set "Docker-Distribution-Api-Version" "registry/2.0"
        Header onsuccess set "Docker-Distribution-Api-Version" "registry/2.0"
        RequestHeader set X-Forwarded-Proto "https"

        # Only allow HEAD and GET methods from remote. Pushes and deletes are done internally by the server.
        <LimitExcept HEAD GET>
            Deny from all
        </LimitExcept>
    </Location>

    ProxyRequests off
    ProxyPass /error/ !
    ProxyPass /v2 http://${HS_REGISTRY_HOST}:${HS_REGISTRY_PORT}/v2
    ProxyPassReverse /v2 http://${HS_REGISTRY_HOST}:${HS_REGISTRY_PORT}/v2

    ### API ###
    <Directory /srv/api/app/public>
        # Disable caching for API requests
        Header set Cache-Control "no-store"
        Require all granted
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^ index.php [QSA,L]
        php_flag session.cookie_secure on
    </Directory>

    ProxyPass /api !
    Alias /api /srv/api/app/public

    ### FRONTEND (proxy) ###
    ProxyPass / http://127.0.0.1:8081/
    ProxyPassReverse / http://127.0.0.1:8081/
    # Permit caching for static resources, but enforce revalidation for each request
    Header set Cache-Control "no-cache, must-revalidate"

    ### Logging ###
    ErrorLog /dev/stdout
    LogLevel warn
    #CustomLog /dev/stdout combined

    ### Security ###
    SSLEngine on
    SSLCertificateFile    /srv/tls/https.crt
    SSLCertificateKeyFile /srv/tls/https.key
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
    </Directory>

    # Crypto-related settings according to https://bettercrypto.org/
    SSLHonorCipherOrder On
    SSLCompression Off
    SSLCipherSuite 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA'
    SSLProtocol All -SSLv2 -SSLv3

    # Use HTTP Strict Transport Security to force clients into secure connections
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains"

    # Clickjacking prevention
    Header set Content-Security-Policy "frame-ancestors none;"
</VirtualHost>
</IfModule>
