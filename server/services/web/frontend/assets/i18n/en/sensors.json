{
  "header": "Sensors",
  "sensorRemoveHeader": "Remove sensor",
  "sensorRemovePrompt": "Should the sensor {{- name}} really be removed?",
  "sensorRemoveHint": "All of its recorded events will be removed.",
  "lastSensorStatus": "Sensor status log",
  "sensorStatusVersion": "FW version",
  "sensorStatusFreeRAM": "Free RAM",
  "sensorStatusDiskUsed": "Disk space (used)",
  "sensorStatusDiskMax": "Disk space (max)",
  "sensorUpdateHeader": "Edit sensor",
  "sensorAddHeader": "Add sensor",
  "sensorNamePlaceholder": "Sensor name",
  "sensorLocation": "Location",
  "sensorLocationPlaceholder": "e.g. a room number",
  "sensorServerConnection": "Server connection",
  "sensorUpdateInterval": "Update interval",
  "sensorToggleSystemCustom": "Toggle between the system-wide standard and a custom sensor-specific value",
  "sensorUpdateIntervalInfo": "Interval in minutes at which this sensor contacts the server.",
  "sensorServerHostPlaceholder": "Server IP address",
  "sensorServerHostInfo": "IP address this sensor contacts to connect to the server.",
  "sensorServerPort": "HTTPS port (API)",
  "sensorServerPortPlaceholder": "Standard: 443",
  "sensorServerPortInfo": "HTTPS port on which this sensor connects to the server API.",
  "sensorFirmwareHeader": "Firmware",
  "sensorFirmwareStandard": "Standard",
  "sensorFirmwareSpecificRevision": "Specific revision",
  "sensorFirmwareStandardInfo": "This sensor uses the platform-dependent standard firmware.",
  "sensorFirmwarePlatform": "Platform",
  "sensorFirmwareRevision": "Revision",
  "sensorFirmwareWarning": "Caution: No firmware registered on this server!",
  "sensorNetworkHeader": "Network interface",
  "sensorNetworkAddressPrompt": "Specify here whether the sensor should receive a static IP address or obtain it from a DHCP server. If this is a virtual sensor (i.e. a Docker container), <em>‘Unconfigured’</em> is the correct choice.",
  "sensorNetworkAddressDHCP": "DHCP",
  "sensorNetworkAddressStatic": "Static",
  "sensorNetworkAddressUnconfigured": "Unconfigured",
  "sensorNetworkHostname": "Hostname",
  "sensorNetworkHostnameInfo": "Optional hostname that is sent to the DHCP server with DHCP requests. Leave this field blank to not send a hostname to the server.",
  "sensorNetworkAddressDHCPInfo": "IP address and subnet mask are obtained from a DHCP server.",
  "sensorNetworkAddressUnconfiguredInfo": "The network interface remains unconfigured. This is necessary if the IP address of a sensor is managed elsewhere, for example by the host system for virtual sensors operated in Docker containers.",
  "sensorNetworkAddressStaticIP": "IP address",
  "sensorNetworkAddressStaticIPPlaceholder": "e.g. 192.168.1.13",
  "sensorNetworkAddressStaticSubnet": "Subnet mask",
  "sensorNetworkAddressStaticSubnetPlaceholder": "e.g. 255.255.255.0",
  "sensorNetworkAddressStaticGateway": "Gateway",
  "sensorNetworkAddressStaticDNS": "DNS server",
  "sensorNetworkEAPOLBeta": "BETA",
  "sensorNetworkEAPOL": "EAPOL/IEEE802.1X Authentication",
  "sensorNetworkEAPOLDisabled": "Disabled",
  "sensorNetworkEAPOLIdentity": "Identity",
  "sensorNetworkEAPOLPassword": "Password",
  "sensorNetworkEAPOLPasswordPlaceholder": "New password",
  "sensorNetworkEAPOLAnonIdentity": "Anonymous identity",
  "sensorNetworkEAPOLCA": "CA certificate (optional)",
  "sensorNetworkEAPOLClientCert": "Client certificate",
  "sensorNetworkEAPOLClientKey": "Client key",
  "sensorNetworkEAPOLClientPassphrase": "Passphrase for client key",
  "sensorNetworkEAPOLUploadError": "Max. file size: 64 kB",
  "sensorNetworkMACMode": "MAC address",
  "sensorNetworkMACModeCustom": "Custom",
  "sensorNetworkMACModeStandardInfo": "Keep the vendor MAC address of the sensor network interface.",
  "sensorNetworkMACCustom": "Individual MAC address",
  "sensorNetworkMACPlaceholder": "e.g. 00:11:22:33:44:55",
  "sensorServiceNetwork": "Internal network range for honeypot services",
  "sensorServiceNetworkInfo": "Specifies the IP address range that sensor services use for internal addressing. If this conflicts with local address ranges, a free and unused address range must be specified here.",
  "sensorServiceNetworkValidationError": "Specify network range as IP address with netmask (e.g. 192.168.1.0/24)",
  "sensorProxy": "HTTP(S) proxy",
  "sensorProxyEnabled": "Active",
  "sensorProxyDisabled": "Inactive",
  "sensorProxyDisabledInfo": "No proxy server is used.",
  "sensorProxyHost": "Proxy server",
  "sensorProxyHostPlaceholder": "e.g. 10.0.0.3",
  "sensorProxyPortPlaceholder": "e.g. 3128",
  "sensorProxyUser": "User",
  "sensorProxyPassword": "Password",
  "sensorProcessing": "Data is being processed",
  "sensorSaveSuccess": "The new sensor has been successfully registered on the server.",
  "sensorSaveSuccessInstructions": "Please download the sensor configuration by clicking on the button below. It is essential for setting up a new sensor, regardless of the target sensor platform.",
  "sensorSaveError": "An error has occurred.",
  "sensorConfigWait": "Please wait while the configuration archive is being created...",
  "sensorConfigError": "An error has occurred while creating the sensor configuration.",
  "sensorConfigDownloadButton": "Download configuration",
  "sensorSaveFirmwareInstructions": "The next steps for deploying the sensor depend on the intended target platform. For a brief summary of the steps required, please click on the links below.",
  "sensorStatus": "Status",
  "sensorStatusTimeout": "Offline",
  "sensorStatusRunning": "Online",
  "sensorStatusUpdating": "Update",
  "sensorStatusError": "Error",
  "sensorStatusNew": "Waiting for first contact",
  "sensorStatusForMinutes": "for {{minutes}} minutes",
  "sensorStatusForHours": "for {{hours}} hours",
  "sensorStatusForDays": "for {{days}} day(s)",
  "sensorNewEvents": "New events",
  "sensorNewEventsShort": "NE",
  "servicesUpdate": "Edit services",
  "servicesLock": "Lock services",
  "serviceStatusScheduled": "Service scheduled",
  "serviceStatusError": "Error while starting service",
  "BBB": "BeagleBone Black",
  "BBBInstructions": "Next, download the sensor firmware and the individual sensor configuration. Then write the firmware to an SD card and copy the configuration archive to the first partition. Finally, connect the sensor to the network with the SD card inserted.",
  "BBBDownload": "Download firmware",
  "docker": "Docker (x86)",
  "dockerInstructions": "To set up a virtual sensor based on Docker, an archive containing both the current Docker image and an associated start script can be downloaded here.",
  "dockerDownload": "Download Docker image"
}