apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: honeysens
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: backup
  name: backup
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backup
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/honeysens: "true"
        io.kompose.service: backup
    spec:
      containers:
        - env:
            - name: CRON_CONDITION
              value: 0 3 * * *
            - name: CRON_DBONLY
              value: "false"
            - name: CRON_ENABLED
              value: "false"
            - name: CRON_KEEP
              value: "0"
            - name: CRON_TEMPLATE
              value: backup-%s
            - name: HS_DB_PASSWORD
              value: honeysens
          image: localhost:5000/honeysens/backup:2.5.0-20220421
          name: backup
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /srv/backup
              name: honeysens-backup
            - mountPath: /srv/data
              name: honeysens-data
            - mountPath: /srv/registry
              name: honeysens-registry
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: honeysens-backup
          persistentVolumeClaim:
            claimName: honeysens-backup
        - name: honeysens-data
          persistentVolumeClaim:
            claimName: honeysens-data
        - name: honeysens-registry
          persistentVolumeClaim:
            claimName: honeysens-registry
status: {}
